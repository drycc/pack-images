kind: pipeline
type: exec
name: linux-pack-amd64

platform:
  arch: amd64
  os: linux

steps:
- name: test
  commands:
  - mkdir -p $HOMEPATH/.docker; echo $IMAGE_PULL_SECRETS > $HOMEPATH/.docker/config.json
  - STACK=20 make test-style
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    IMAGE_PULL_SECRETS:
      from_secret: container_pull_secrets
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    event:
    - push
    - tag
    - pull_request

- name: publish pack
  commands:
  - echo $CONTAINER_PASSWORD | docker login $DRYCC_REGISTRY --username $CONTAINER_USERNAME --password-stdin > /dev/null 2>&1
  - CODENAME=bullseye make publish-pack
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    CONTAINER_USERNAME:
      from_secret: container_username
    CONTAINER_PASSWORD:
      from_secret: container_password
  when:
    event:
    - push
    - tag

---
kind: pipeline
type: exec
name: linux-pack-arm64

platform:
  arch: arm64
  os: linux

steps:
- name: publish pack
  commands:
  - echo $CONTAINER_PASSWORD | docker login $DRYCC_REGISTRY --username $CONTAINER_USERNAME --password-stdin > /dev/null 2>&1
  - CODENAME=bullseye make publish-pack
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    CONTAINER_USERNAME:
      from_secret: container_username
    CONTAINER_PASSWORD:
      from_secret: container_password

trigger:
  event:
  - push
  - tag

---
kind: pipeline
type: docker
name: manifest-pack
image_pull_secrets:
- container_pull_secrets

steps:
- name: generate pack manifest
  image: registry.drycc.cc/drycc/python-dev
  commands:
  - sed -i "s/registry.drycc.cc/$${DRYCC_REGISTRY}/g" .drone/manifest-run.tmpl
  - sed -i "s/registry.drycc.cc/$${DRYCC_REGISTRY}/g" .drone/manifest-build.tmpl
  - sed -i "s/20/$${STACK}/g" .drone/manifest-run.tmpl
  - sed -i "s/20/$${STACK}/g" .drone/manifest-build.tmpl
  environment:
    STACK: 20
    DRYCC_REGISTRY:
      from_secret: drycc_registry

- name: publish run
  image: plugins/manifest
  settings:
    spec: .drone/manifest-run.tmpl
    username:
      from_secret: container_username
    password:
      from_secret: container_password
  environment:
    STACK: 20
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

- name: publish build
  image: plugins/manifest
  settings:
    spec: .drone/manifest-build.tmpl
    username:
      from_secret: container_username
    password:
      from_secret: container_password
  environment:
    STACK: 20
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

trigger:
  event:
  - push
  - tag

depends_on:
- linux-pack-amd64
- linux-pack-arm64

---
kind: pipeline
type: exec
name: linux-buildpacks-amd64

platform:
  arch: amd64
  os: linux

steps:
- name: publish amd64 buildpack
  commands:
  - echo $CONTAINER_PASSWORD | docker login $DRYCC_REGISTRY --username $CONTAINER_USERNAME --password-stdin > /dev/null 2>&1
  - docker run --rm
      -v "/usr/local/bin:/tmp/bin"
      --env CODENAME=bullseye
      --env DRYCC_REGISTRY=$DRYCC_REGISTRY
      --entrypoint init-stack
      $DRYCC_REGISTRY/drycc/imagebuilder:canary
      bash -c "cp /opt/drycc/pack/bin/pack /tmp/bin"
  - make publish-buildpack
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    CONTAINER_USERNAME:
      from_secret: container_username
    CONTAINER_PASSWORD:
      from_secret: container_password
  when:
    event:
    - push
    - tag

depends_on:
- manifest-pack

---
kind: pipeline
type: exec
name: linux-buildpacks-arm64

platform:
  arch: arm64
  os: linux

steps:
- name: publish arm64 buildpack
  commands:
  - echo $CONTAINER_PASSWORD | docker login $DRYCC_REGISTRY --username $CONTAINER_USERNAME --password-stdin > /dev/null 2>&1
  - docker run --rm
      -v "/usr/local/bin:/tmp/bin"
      --env CODENAME=bullseye
      --env DRYCC_REGISTRY=$DRYCC_REGISTRY
      --entrypoint init-stack
      $DRYCC_REGISTRY/drycc/imagebuilder:canary
      bash -c "cp /opt/drycc/pack/bin/pack /tmp/bin"
  - make publish-buildpack
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    CONTAINER_USERNAME:
      from_secret: container_username
    CONTAINER_PASSWORD:
      from_secret: container_password
  when:
    event:
    - push
    - tag

depends_on:
- manifest-pack

---
kind: pipeline
type: docker
name: manifest-buildpacks
image_pull_secrets:
- container_pull_secrets

steps:
- name: generate buildpacks manifest
  image: registry.drycc.cc/drycc/python-dev
  commands:
  - sed -i "s/registry.drycc.cc/$${DRYCC_REGISTRY}/g" .drone/manifest-buildpacks.tmpl
  - sed -i "s/registry.drycc.cc/$${DRYCC_REGISTRY}/g" builder.toml
  - sed -i "s/20/$${STACK}/g" .drone/manifest-buildpacks.tmpl
  - sed -i "s/20/$${STACK}/g" builder.toml
  environment:
    STACK: 20
    DRYCC_REGISTRY:
      from_secret: drycc_registry

- name: publish buildpack
  image: plugins/manifest
  settings:
    spec: .drone/manifest-buildpacks.tmpl
    username:
      from_secret: container_username
    password:
      from_secret: container_password
  environment:
    STACK: 20
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

trigger:
  event:
  - push
  - tag

depends_on:
- linux-buildpacks-amd64
- linux-buildpacks-arm64
