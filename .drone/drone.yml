kind: pipeline
type: exec
name: linux-pack-amd64

platform:
  arch: amd64
  os: linux

steps:
- name: install pack
  commands:
  - docker run --rm -v /usr/local/bin:/tmp/bin docker.io/drycc/go-dev cp /usr/local/bin/pack /tmp/bin

- name: test
  commands:
  - STACK=20 make test-style
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    CODECOV_TOKEN:
      from_secret: codecov_token
  when:
    event:
    - push
    - tag
    - pull_request

- name: publish pack
  commands:
  - echo $DOCKER_PASSWORD | docker login $DRYCC_REGISTRY --username $DOCKER_USERNAME --password-stdin
  - STACK=20 VERSION=20-linux-amd64 make publish-pack
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event:
    - push
    - tag

---
kind: pipeline
type: exec
name: linux-pack-arm64

platform:
  arch: arm64
  os: linux

steps:
- name: install pack
  commands:
  - docker run --rm -v /usr/local/bin:/tmp/bin docker.io/drycc/go-dev cp /usr/local/bin/pack /tmp/bin

- name: publish pack
  commands:
  - echo $DOCKER_PASSWORD | docker login $DRYCC_REGISTRY --username $DOCKER_USERNAME --password-stdin
  - STACK=20 VERSION=20-linux-arm64 make publish-pack
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password

trigger:
  event:
  - push
  - tag

---
kind: pipeline
type: docker
name: manifest-pack

steps:
- name: generate pack manifest
  image: docker.io/library/alpine
  commands:
  - sed -i "s/docker.io/$${DRYCC_REGISTRY}/g" .drone/manifest-run.tmpl
  - sed -i "s/docker.io/$${DRYCC_REGISTRY}/g" .drone/manifest-build.tmpl
  - sed -i "s/20/$${STACK}/g" .drone/manifest-run.tmpl
  - sed -i "s/20/$${STACK}/g" .drone/manifest-build.tmpl
  environment:
    STACK: 20
    DRYCC_REGISTRY:
      from_secret: drycc_registry

- name: publish run
  image: plugins/manifest
  settings:
    spec: .drone/manifest-run.tmpl
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  environment:
    STACK: 20
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

- name: publish build
  image: plugins/manifest
  settings:
    spec: .drone/manifest-build.tmpl
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  environment:
    STACK: 20
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

trigger:
  event:
  - push
  - tag

depends_on:
- linux-pack-amd64
- linux-pack-arm64

---
kind: pipeline
type: exec
name: linux-buildpacks-amd64

platform:
  arch: amd64
  os: linux

steps:
- name: publish amd64 buildpack
  commands:
  - echo $DOCKER_PASSWORD | docker login $DRYCC_REGISTRY --username $DOCKER_USERNAME --password-stdin
  - STACK=20 VERSION=20-linux-amd64 make publish-buildpack
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event:
    - push
    - tag

depends_on:
- manifest-pack

---
kind: pipeline
type: exec
name: linux-buildpacks-arm64

platform:
  arch: arm64
  os: linux

steps:
- name: publish arm64 buildpack
  commands:
  - echo $DOCKER_PASSWORD | docker login $DRYCC_REGISTRY --username $DOCKER_USERNAME --password-stdin
  - STACK=20 VERSION=20-linux-arm64 make publish-buildpack
  environment:
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry
    DOCKER_USERNAME:
      from_secret: docker_username
    DOCKER_PASSWORD:
      from_secret: docker_password
  when:
    event:
    - push
    - tag

depends_on:
- manifest-pack

---
kind: pipeline
type: docker
name: manifest-buildpacks

steps:
- name: generate buildpacks manifest
  image: docker.io/library/alpine
  commands:
  - sed -i "s/docker.io/$${DRYCC_REGISTRY}/g" .drone/manifest-buildpacks.tmpl
  - sed -i "s/docker.io/$${DRYCC_REGISTRY}/g" builder.toml
  - sed -i "s/20/$${STACK}/g" .drone/manifest-buildpacks.tmpl
  - sed -i "s/20/$${STACK}/g" builder.toml
  environment:
    STACK: 20
    DRYCC_REGISTRY:
      from_secret: drycc_registry

- name: publish buildpack
  image: plugins/manifest
  settings:
    spec: .drone/manifest-buildpacks.tmpl
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
  environment:
    STACK: 20
    DEV_REGISTRY:
      from_secret: dev_registry
    DRYCC_REGISTRY:
      from_secret: drycc_registry

trigger:
  event:
  - push
  - tag

depends_on:
- linux-buildpacks-amd64
- linux-buildpacks-arm64
